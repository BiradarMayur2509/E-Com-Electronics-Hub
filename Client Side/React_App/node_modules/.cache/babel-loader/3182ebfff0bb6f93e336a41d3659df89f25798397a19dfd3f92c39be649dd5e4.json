{"ast":null,"code":"// import React, { useReducer, useState } from 'react'; // Added import\n// import { useNavigate } from 'react-router-dom';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { login } from './slice';\n// import './LoginComp.css';\n\n// export default function LoginComp() {\n//   const init = {\n//     uid: \"\",\n//     pwd: \"\"\n//   };\n\n//   const reducer = (state, action) => {\n//     switch (action.type) {\n//       case 'update':\n//         return { ...state, [action.fld]: action.val };\n//       case 'reset':\n//         return init;\n//       default:\n//         return state;\n//     }\n//   };\n\n//   const [info, dispatch] = useReducer(reducer, init);\n//   const [msg, setMsg] = useState(\"\");\n//   const navigate = useNavigate();\n//   const reduxAction = useDispatch();\n//   const mystate = useSelector((state) => state.logged);\n\n//   const handleChange = (e, field) => {\n//     dispatch({ type: 'update', fld: field, val: e.target.value });\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     // Your login submission logic here\n//   };\n\n//   const handleClear = () => {\n//     dispatch({ type: 'reset' });\n//   };\n\n//   const sendData = (e) => {\n//     e.preventDefault();\n//     const reqOptions = {\n//       method: 'POST',\n//       headers: { 'content-type': 'application/json' },\n//       body: JSON.stringify({\n//         username: info.uid,\n//         password: info.pwd\n//       })\n//     };\n\n//     fetch(\"http://localhost:8080/checkUser\", reqOptions)\n//       .then(resp => {\n//         if (resp.ok) {\n//           return resp.json();\n//         } else {\n//           throw new Error(\"Server Error\");\n//         }\n//       })\n//       .then(obj => {\n//         if (obj === null) {\n//           setMsg(\"Wrong UID/PWD\");\n//         } else {\n//           reduxAction(login());\n//           if (obj.activation_status === false) {\n//             alert(\"Request has not been approved\");\n//           } else {\n//             switch (obj.role.role_id) {\n//               case 1:\n//                 navigate(\"/admin_home\");\n//                 reduxAction(login());\n//                 break;\n//               case 2:\n//                 navigate(\"/consumer_home\");\n//                 reduxAction(login());\n//                 break;\n//               case 3:\n//                 navigate(\"/seller_home\");\n//                 reduxAction(login());\n//                 break;\n//               default:\n//                 break;\n//             }\n//           }\n//         }\n//       })\n//       .catch((error) => alert(\"Error : \" + error.toString()));\n//   };\n\n// //   return (\n// //     <div className=\"container mt-5 login-form-container col-6\"  style={{ backgroundColor: 'lightgrey', padding: '20px', border: '1px solid ', borderRadius: '10px' }}>\n\n// //       <h1 className=\"title\">Login Page</h1>\n// //       <form onSubmit={handleSubmit}>\n// //         <div className=\"form-group\">\n// //           <label htmlFor=\"uid\" className=\"text-center mb-4\">Enter User Name:</label>\n// //           <input type=\"text\" className=\"form-control\" id=\"uid\" name=\"uid\" value={info.uid} onChange={(e) => handleChange(e, 'uid')} />\n// //         </div>\n// //         <div className=\"form-group\">\n// //           <label htmlFor=\"pwd\" className=\"text-center mb-4\">Enter Password:</label>\n// //           <input type=\"password\" className=\"form-control\" id=\"pwd\" name=\"pwd\" value={info.pwd} onChange={(e) => handleChange(e, 'pwd')} />\n// //         </div>\n// //         <button type=\"submit\" className=\"btn btn-primary\" onClick={(e) => { sendData(e) }}>Submit</button>\n// //         <button type=\"button\" className=\"btn btn-primary\" onClick={handleClear}>Clear</button>\n// //       </form>\n// //       {/* <p>{JSON.stringify(info)}</p> */}\n// //       <p className=\"error-message\">{msg}</p>\n// //     </div>\n// //   );\n// // }\n// // className=\"container mt-5 login-form-container col-6\"\n// return (\n//   // <div className='box'>\n\n//   //   <form className=\"my-4\">\n//   //     <div className=\"mb-3 row\">\n//   //       <label htmlFor=\"username\" className=\"col-sm-2 col-form-label\">\n//   //         Enter Username:\n//   //       </label>\n//   //       <div className=\"col-sm-4\">\n//   //         <input\n//   //           type=\"text\"\n//   //           className=\"form-control form-control-sm\"\n//   //           id=\"username\"\n//   //           name=\"username\"\n//   //           value={info.username}\n//   //           onChange={(e) => {\n//   //             dispatch({\n//   //               type: \"update\",\n//   //               fld: \"username\",\n//   //               val: e.target.value,\n//   //             });\n//   //           }}\n//   //         />\n//   //       </div>\n//   //     </div>\n//   //     <div className=\"mb-3 row\">\n//   //       <label htmlFor=\"password\" className=\"col-sm-2 col-form-label\">\n//   //         Enter Password:\n//   //       </label>\n//   //       <div className=\"col-sm-4\">\n//   //         <input\n//   //           type=\"password\"\n//   //           className=\"form-control form-control-sm\"\n//   //           id=\"password\"\n//   //           name=\"password\"\n//   //           value={info.password}\n//   //           onChange={(e) => {\n//   //             dispatch({\n//   //               type: \"update\",\n//   //               fld: \"password\",\n//   //               val: e.target.value,\n//   //             });\n//   //           }}\n//   //         />\n//   //       </div>\n//   //     </div>\n//   //     <div className=\"row\">\n//   //       <div className=\"col-sm-2\"></div>\n//   //       <div className=\"col-sm-10\">\n//   //         <button\n//   //           type=\"submit\"\n//   //           className=\"btn btn-primary me-2\"\n//   //           onClick={(e) => {\n//   //             sendData(e);\n//   //           }}\n//   //         >\n//   //           Submit\n//   //         </button>\n//   //         <button\n//   //           type=\"reset\"\n//   //           className=\"btn btn-danger\"\n//   //           onClick={() => {\n//   //             dispatch({ type: \"reset\" });\n//   //           }}\n//   //         >\n//   //           Reset\n//   //         </button>\n//   //       </div>\n//   //     </div>\n//   //   </form>\n\n//   //   {/* <p>{JSON.stringify(info)}</p> */}\n//   //   {/* <Image className=\"image-container\" src={img}></Image> */}\n//   // </div>\n//   <div className='box'>\n//   <form className=\"my-4\">\n//     <div className=\"mb-3 row\">\n//       <label htmlFor=\"username\" className=\"col-sm-2 col-form-label\">\n//         Enter Username:\n//       </label>\n//       <div className=\"col-sm-4\">\n//         <input\n//           type=\"text\"\n//           className=\"form-control form-control-sm\"\n//           id=\"username\"\n//           name=\"username\"\n//           value={info.username}\n//           onChange={(e) => {\n//             dispatch({\n//               type: \"update\",\n//               fld: \"username\",\n//               val: e.target.value,\n//             });\n//           }}\n//         />\n//       </div>\n//     </div>\n//     <div className=\"mb-3 row\">\n//       <label htmlFor=\"password\" className=\"col-sm-2 col-form-label\">\n//         Enter Password:\n//       </label>\n//       <div className=\"col-sm-4\">\n//         <input\n//           type=\"password\"\n//           className=\"form-control form-control-sm\"\n//           id=\"password\"\n//           name=\"password\"\n//           value={info.password}\n//           onChange={(e) => {\n//             dispatch({\n//               type: \"update\",\n//               fld: \"password\",\n//               val: e.target.value,\n//             });\n//           }}\n//         />\n//       </div>\n//     </div>\n//     <div className=\"row\">\n//       <div className=\"col-sm-2\"></div>\n//       <div className=\"col-sm-10 d-flex justify-content-start\">\n//         <button\n//           type=\"submit\"\n//           className=\"btn btn-primary me-2\"\n//           onClick={(e) => {\n//             sendData(e);\n//           }}\n//         >\n//           Submit\n//         </button>\n//         <button\n//           type=\"reset\"\n//           className=\"btn btn-danger\"\n//           onClick={() => {\n//             dispatch({ type: \"reset\" });\n//           }}\n//         >\n//           Reset\n//         </button>\n//       </div>\n//     </div>\n//   </form>\n// </div>\n\n// );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/HP/Desktop/Git changes/E-Com-Electronics-Hub/Client Side/React_App/src/components/LoginComp.js"],"sourcesContent":["// import React, { useReducer, useState } from 'react'; // Added import\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { login } from './slice';\r\n// import './LoginComp.css';\r\n\r\n\r\n// export default function LoginComp() {\r\n//   const init = {\r\n//     uid: \"\",\r\n//     pwd: \"\"\r\n//   };\r\n\r\n//   const reducer = (state, action) => {\r\n//     switch (action.type) {\r\n//       case 'update':\r\n//         return { ...state, [action.fld]: action.val };\r\n//       case 'reset':\r\n//         return init;\r\n//       default:\r\n//         return state;\r\n//     }\r\n//   };\r\n\r\n//   const [info, dispatch] = useReducer(reducer, init);\r\n//   const [msg, setMsg] = useState(\"\");\r\n//   const navigate = useNavigate();\r\n//   const reduxAction = useDispatch();\r\n//   const mystate = useSelector((state) => state.logged);\r\n\r\n//   const handleChange = (e, field) => {\r\n//     dispatch({ type: 'update', fld: field, val: e.target.value });\r\n//   };\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     // Your login submission logic here\r\n//   };\r\n\r\n//   const handleClear = () => {\r\n//     dispatch({ type: 'reset' });\r\n//   };\r\n\r\n//   const sendData = (e) => {\r\n//     e.preventDefault();\r\n//     const reqOptions = {\r\n//       method: 'POST',\r\n//       headers: { 'content-type': 'application/json' },\r\n//       body: JSON.stringify({\r\n//         username: info.uid,\r\n//         password: info.pwd\r\n//       })\r\n//     };\r\n\r\n//     fetch(\"http://localhost:8080/checkUser\", reqOptions)\r\n//       .then(resp => {\r\n//         if (resp.ok) {\r\n//           return resp.json();\r\n//         } else {\r\n//           throw new Error(\"Server Error\");\r\n//         }\r\n//       })\r\n//       .then(obj => {\r\n//         if (obj === null) {\r\n//           setMsg(\"Wrong UID/PWD\");\r\n//         } else {\r\n//           reduxAction(login());\r\n//           if (obj.activation_status === false) {\r\n//             alert(\"Request has not been approved\");\r\n//           } else {\r\n//             switch (obj.role.role_id) {\r\n//               case 1:\r\n//                 navigate(\"/admin_home\");\r\n//                 reduxAction(login());\r\n//                 break;\r\n//               case 2:\r\n//                 navigate(\"/consumer_home\");\r\n//                 reduxAction(login());\r\n//                 break;\r\n//               case 3:\r\n//                 navigate(\"/seller_home\");\r\n//                 reduxAction(login());\r\n//                 break;\r\n//               default:\r\n//                 break;\r\n//             }\r\n//           }\r\n//         }\r\n//       })\r\n//       .catch((error) => alert(\"Error : \" + error.toString()));\r\n//   };\r\n\r\n// //   return (\r\n// //     <div className=\"container mt-5 login-form-container col-6\"  style={{ backgroundColor: 'lightgrey', padding: '20px', border: '1px solid ', borderRadius: '10px' }}>\r\n\r\n// //       <h1 className=\"title\">Login Page</h1>\r\n// //       <form onSubmit={handleSubmit}>\r\n// //         <div className=\"form-group\">\r\n// //           <label htmlFor=\"uid\" className=\"text-center mb-4\">Enter User Name:</label>\r\n// //           <input type=\"text\" className=\"form-control\" id=\"uid\" name=\"uid\" value={info.uid} onChange={(e) => handleChange(e, 'uid')} />\r\n// //         </div>\r\n// //         <div className=\"form-group\">\r\n// //           <label htmlFor=\"pwd\" className=\"text-center mb-4\">Enter Password:</label>\r\n// //           <input type=\"password\" className=\"form-control\" id=\"pwd\" name=\"pwd\" value={info.pwd} onChange={(e) => handleChange(e, 'pwd')} />\r\n// //         </div>\r\n// //         <button type=\"submit\" className=\"btn btn-primary\" onClick={(e) => { sendData(e) }}>Submit</button>\r\n// //         <button type=\"button\" className=\"btn btn-primary\" onClick={handleClear}>Clear</button>\r\n// //       </form>\r\n// //       {/* <p>{JSON.stringify(info)}</p> */}\r\n// //       <p className=\"error-message\">{msg}</p>\r\n// //     </div>\r\n// //   );\r\n// // }\r\n// // className=\"container mt-5 login-form-container col-6\"\r\n// return (\r\n//   // <div className='box'>\r\n    \r\n//   //   <form className=\"my-4\">\r\n//   //     <div className=\"mb-3 row\">\r\n//   //       <label htmlFor=\"username\" className=\"col-sm-2 col-form-label\">\r\n//   //         Enter Username:\r\n//   //       </label>\r\n//   //       <div className=\"col-sm-4\">\r\n//   //         <input\r\n//   //           type=\"text\"\r\n//   //           className=\"form-control form-control-sm\"\r\n//   //           id=\"username\"\r\n//   //           name=\"username\"\r\n//   //           value={info.username}\r\n//   //           onChange={(e) => {\r\n//   //             dispatch({\r\n//   //               type: \"update\",\r\n//   //               fld: \"username\",\r\n//   //               val: e.target.value,\r\n//   //             });\r\n//   //           }}\r\n//   //         />\r\n//   //       </div>\r\n//   //     </div>\r\n//   //     <div className=\"mb-3 row\">\r\n//   //       <label htmlFor=\"password\" className=\"col-sm-2 col-form-label\">\r\n//   //         Enter Password:\r\n//   //       </label>\r\n//   //       <div className=\"col-sm-4\">\r\n//   //         <input\r\n//   //           type=\"password\"\r\n//   //           className=\"form-control form-control-sm\"\r\n//   //           id=\"password\"\r\n//   //           name=\"password\"\r\n//   //           value={info.password}\r\n//   //           onChange={(e) => {\r\n//   //             dispatch({\r\n//   //               type: \"update\",\r\n//   //               fld: \"password\",\r\n//   //               val: e.target.value,\r\n//   //             });\r\n//   //           }}\r\n//   //         />\r\n//   //       </div>\r\n//   //     </div>\r\n//   //     <div className=\"row\">\r\n//   //       <div className=\"col-sm-2\"></div>\r\n//   //       <div className=\"col-sm-10\">\r\n//   //         <button\r\n//   //           type=\"submit\"\r\n//   //           className=\"btn btn-primary me-2\"\r\n//   //           onClick={(e) => {\r\n//   //             sendData(e);\r\n//   //           }}\r\n//   //         >\r\n//   //           Submit\r\n//   //         </button>\r\n//   //         <button\r\n//   //           type=\"reset\"\r\n//   //           className=\"btn btn-danger\"\r\n//   //           onClick={() => {\r\n//   //             dispatch({ type: \"reset\" });\r\n//   //           }}\r\n//   //         >\r\n//   //           Reset\r\n//   //         </button>\r\n//   //       </div>\r\n//   //     </div>\r\n//   //   </form>\r\n\r\n//   //   {/* <p>{JSON.stringify(info)}</p> */}\r\n//   //   {/* <Image className=\"image-container\" src={img}></Image> */}\r\n//   // </div>\r\n//   <div className='box'>\r\n//   <form className=\"my-4\">\r\n//     <div className=\"mb-3 row\">\r\n//       <label htmlFor=\"username\" className=\"col-sm-2 col-form-label\">\r\n//         Enter Username:\r\n//       </label>\r\n//       <div className=\"col-sm-4\">\r\n//         <input\r\n//           type=\"text\"\r\n//           className=\"form-control form-control-sm\"\r\n//           id=\"username\"\r\n//           name=\"username\"\r\n//           value={info.username}\r\n//           onChange={(e) => {\r\n//             dispatch({\r\n//               type: \"update\",\r\n//               fld: \"username\",\r\n//               val: e.target.value,\r\n//             });\r\n//           }}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//     <div className=\"mb-3 row\">\r\n//       <label htmlFor=\"password\" className=\"col-sm-2 col-form-label\">\r\n//         Enter Password:\r\n//       </label>\r\n//       <div className=\"col-sm-4\">\r\n//         <input\r\n//           type=\"password\"\r\n//           className=\"form-control form-control-sm\"\r\n//           id=\"password\"\r\n//           name=\"password\"\r\n//           value={info.password}\r\n//           onChange={(e) => {\r\n//             dispatch({\r\n//               type: \"update\",\r\n//               fld: \"password\",\r\n//               val: e.target.value,\r\n//             });\r\n//           }}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//     <div className=\"row\">\r\n//       <div className=\"col-sm-2\"></div>\r\n//       <div className=\"col-sm-10 d-flex justify-content-start\">\r\n//         <button\r\n//           type=\"submit\"\r\n//           className=\"btn btn-primary me-2\"\r\n//           onClick={(e) => {\r\n//             sendData(e);\r\n//           }}\r\n//         >\r\n//           Submit\r\n//         </button>\r\n//         <button\r\n//           type=\"reset\"\r\n//           className=\"btn btn-danger\"\r\n//           onClick={() => {\r\n//             dispatch({ type: \"reset\" });\r\n//           }}\r\n//         >\r\n//           Reset\r\n//         </button>\r\n//       </div>\r\n//     </div>\r\n//   </form>\r\n// </div>\r\n\r\n\r\n// );\r\n// }"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}