{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\Git changes\\\\E-Com-Electronics-Hub\\\\Client Side\\\\React_App\\\\src\\\\components\\\\TrackOrder.js\";\nimport React from 'react';\nimport './TrackOrder.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrackOrder = () => {\n  // Get current date\n  const currentDate = new Date();\n\n  // Calculate date of delivery (5 days from current date)\n  const deliveryDate = new Date(currentDate);\n  deliveryDate.setDate(deliveryDate.getDate() + 5);\n\n  // Array of Indian city names\n  const indianCities = ['Mumbai', 'Delhi', 'Bangalore', 'Kolkata', 'Chennai', 'Hyderabad', 'Ahmedabad', 'Pune', 'Surat', 'Jaipur', 'Lucknow', 'Kanpur', 'Nagpur', 'Indore', 'Thane', 'Bhopal', 'Visakhapatnam', 'Patna', 'Vadodara', 'Ghaziabad'];\n\n  // Function to get a random Indian city name\n  const getRandomIndianCity = () => {\n    const randomIndex = Math.floor(Math.random() * indianCities.length);\n    return indianCities[randomIndex];\n  };\n\n  // Generate random Indian city names for the path of traveling\n  const pathOfTraveling = `${getRandomIndianCity()} - ${getRandomIndianCity()} - ${getRandomIndianCity()}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"track-order\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Order Tracking\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Date of Booking:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 14\n          }, this), \" \", formatDate(currentDate)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Date of Path of Traveling:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 14\n          }, this), \" \", pathOfTraveling]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Estimated Delivery Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 14\n          }, this), \" \", formatDate(deliveryDate)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n// Function to format date as \"Month Day, Year\" (e.g., \"January 20, 2024\")\n_c = TrackOrder;\nconst formatDate = date => {\n  const options = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  };\n  return date.toLocaleDateString('en-US', options);\n};\nexport default TrackOrder;\nvar _c;\n$RefreshReg$(_c, \"TrackOrder\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TrackOrder","currentDate","Date","deliveryDate","setDate","getDate","indianCities","getRandomIndianCity","randomIndex","Math","floor","random","length","pathOfTraveling","className","children","fileName","_jsxFileName","lineNumber","columnNumber","formatDate","_c","date","options","year","month","day","toLocaleDateString","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/Git changes/E-Com-Electronics-Hub/Client Side/React_App/src/components/TrackOrder.js"],"sourcesContent":["import React from 'react';\r\nimport './TrackOrder.css';\r\n\r\nconst TrackOrder = () => {\r\n  // Get current date\r\n  const currentDate = new Date();\r\n\r\n  // Calculate date of delivery (5 days from current date)\r\n  const deliveryDate = new Date(currentDate);\r\n  deliveryDate.setDate(deliveryDate.getDate() + 5);\r\n\r\n  // Array of Indian city names\r\n  const indianCities = [\r\n    'Mumbai', 'Delhi', 'Bangalore', 'Kolkata', 'Chennai', 'Hyderabad', 'Ahmedabad', 'Pune', 'Surat', 'Jaipur', \r\n    'Lucknow', 'Kanpur', 'Nagpur', 'Indore', 'Thane', 'Bhopal', 'Visakhapatnam', 'Patna', 'Vadodara', 'Ghaziabad'\r\n  ];\r\n\r\n  // Function to get a random Indian city name\r\n  const getRandomIndianCity = () => {\r\n    const randomIndex = Math.floor(Math.random() * indianCities.length);\r\n    return indianCities[randomIndex];\r\n  };\r\n\r\n  // Generate random Indian city names for the path of traveling\r\n  const pathOfTraveling = `${getRandomIndianCity()} - ${getRandomIndianCity()} - ${getRandomIndianCity()}`;\r\n\r\n  return (\r\n    <div className=\"track-order\">\r\n      <div className=\"order-card\">\r\n        <h2>Order Tracking</h2>\r\n        <div className=\"progress-bar\">\r\n          <div className=\"progress\"></div>\r\n        </div>\r\n        <div className=\"order-details\">\r\n          <p><strong>Date of Booking:</strong> {formatDate(currentDate)}</p>\r\n          <p><strong>Date of Path of Traveling:</strong> {pathOfTraveling}</p>\r\n          <p><strong>Estimated Delivery Date:</strong> {formatDate(deliveryDate)}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Function to format date as \"Month Day, Year\" (e.g., \"January 20, 2024\")\r\nconst formatDate = (date) => {\r\n  const options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n  return date.toLocaleDateString('en-US', options);\r\n}\r\n\r\nexport default TrackOrder;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}