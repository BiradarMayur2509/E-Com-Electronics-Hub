{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\Git changes\\\\E-Com-Electronics-Hub\\\\Client Side\\\\React_App\\\\src\\\\components\\\\ConsumerReg.js\",\n  _s = $RefreshSig$();\nimport { useReducer, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './LoginComp.css';\nimport Modal from './Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ConsumerReg() {\n  _s();\n  const init = {\n    username: \"\",\n    password: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\",\n    phone_no: \"\",\n    area: 0,\n    address: \"\"\n  };\n  const reducer = (state, action) => {\n    switch (action.type) {\n      case 'update':\n        return {\n          ...state,\n          [action.fld]: action.val\n        };\n      case 'reset':\n        return init;\n      default:\n        return state;\n    }\n  };\n  const [info, dispatch] = useReducer(reducer, init);\n  const [cities, setCities] = useState([]);\n  const [areas, setAreas] = useState([]);\n  const [msg, setMsg] = useState(\"\");\n  const [errorMsgs, setErrorMsgs] = useState(init);\n  const navigate = useNavigate();\n  const [showModal, setShowModal] = useState(false);\n  const confirmSubmit = () => {\n    setShowModal(true);\n  };\n  useEffect(() => {\n    fetch(\"http://localhost:8080/getCities\").then(resp => {\n      if (resp.ok) {\n        return resp.json();\n      } else {\n        throw new Error(\"server error\");\n      }\n    }).then(data => setCities(data)).catch(error => console.log(error.toString()));\n  }, []);\n  const getAreas = id => {\n    fetch(\"http://localhost:8080/getAreas?cid=\" + id).then(resp => {\n      if (resp.ok) {\n        return resp.json();\n      } else {\n        throw new Error(\"server error\");\n      }\n    }).then(obj => setAreas(obj)).catch(error => console.log(error.toString()));\n  };\n  const sendData = e => {\n    e.preventDefault();\n    const requiredFields = ['username', 'password', 'first_name', 'last_name', 'email', 'phone_no', 'area', 'address'];\n    const newErrorMsgs = {\n      ...errorMsgs\n    }; // Copy of current error messages\n\n    for (const field of requiredFields) {\n      newErrorMsgs[field] = \"\";\n    }\n    for (const field of requiredFields) {\n      if (!info[field]) {\n        newErrorMsgs[field] = \"This field is required\";\n      }\n    }\n\n    // Check if any error messages exist\n    for (const field of requiredFields) {\n      if (newErrorMsgs[field]) {\n        setErrorMsgs(newErrorMsgs);\n        return;\n      }\n    }\n    const handleConfirm = () => {\n      setShowModal(false);\n      const reqOptions = {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: info.username,\n          password: info.password,\n          first_name: info.first_name,\n          last_name: info.last_name,\n          email: info.email,\n          phone_no: info.phone_no,\n          area_id: info.area,\n          address: info.address\n        })\n      };\n      fetch(\"http://localhost:8080/consumerreg\", reqOptions).then(resp => {\n        if (resp.ok) {\n          console.log(resp.status);\n          return resp.json();\n        } else {\n          throw new Error(\"server error\");\n        }\n      }).then(obj => {\n        alert(\"Registration successful, Try Login\");\n        navigate('/login');\n      }).catch(error => {\n        console.error(error);\n      });\n    };\n    const handleCancel = () => {\n      setShowModal(false);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-5 login-form-container col-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Consumer Registration \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            className: \"form-label\",\n            children: \"Enter User Name :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"username\",\n            name: \"username\",\n            value: info.username,\n            onChange: e => dispatch({\n              type: 'update',\n              fld: 'username',\n              val: e.target.value\n            }),\n            required: true,\n            pattern: \"[a-zA-Z0-9_-]{3,16}$\",\n            title: \"Username allows alphanumeric characters (both lowercase and uppercase), underscores, and hyphens. Length must be between 3 and 16 characters.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-msg\",\n            style: {\n              color: 'red'\n            },\n            children: errorMsgs.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            className: \"form-label\",\n            children: \"Enter Password :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"form-control\",\n            id: \"password\",\n            name: \"password\",\n            value: info.password,\n            onChange: e => dispatch({\n              type: 'update',\n              fld: 'password',\n              val: e.target.value\n            }),\n            required: true,\n            pattern: \"^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=])(?=\\\\S+$).{8,}$\",\n            title: \"Password should contain at least one digit, one lowercase letter, one uppercase letter, one special character, and be at least 8 characters long.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-msg\",\n            style: {\n              color: 'red'\n            },\n            children: errorMsgs.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"first_name\",\n            className: \"form-label\",\n            children: \"Enter First Name :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"first_name\",\n            name: \"first_name\",\n            value: info.first_name,\n            onChange: e => dispatch({\n              type: 'update',\n              fld: 'first_name',\n              val: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-msg\",\n            style: {\n              color: 'red'\n            },\n            children: errorMsgs.first_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"last_name\",\n            className: \"form-label\",\n            children: \"Enter Last Name :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"last_name\",\n            name: \"last_name\",\n            value: info.last_name,\n            onChange: e => dispatch({\n              type: 'update',\n              fld: 'last_name',\n              val: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-msg\",\n            style: {\n              color: 'red'\n            },\n            children: errorMsgs.last_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            className: \"form-label\",\n            children: \"Enter User Email :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            className: \"form-control\",\n            id: \"email\",\n            name: \"email\",\n            value: info.email,\n            onChange: e => dispatch({\n              type: 'update',\n              fld: 'email',\n              val: e.target.value\n            }),\n            required: true,\n            pattern: \"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,}$\",\n            title: \"Email should be in proper format\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-msg\",\n            style: {\n              color: 'red'\n            },\n            children: errorMsgs.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"phone_no\",\n            className: \"form-label\",\n            children: \"Enter User Phone Number :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"tel\",\n            className: \"form-control\",\n            id: \"phone_no\",\n            name: \"phone_no\",\n            value: info.phone_no,\n            onChange: e => dispatch({\n              type: 'update',\n              fld: 'phone_no',\n              val: e.target.value\n            }),\n            required: true,\n            pattern: \"[0-9]{10}\",\n            title: \"Phone number should be 10 digits\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-msg\",\n            style: {\n              color: 'red'\n            },\n            children: errorMsgs.phone_no\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"city\",\n            className: \"form-label\",\n            children: \"Select City:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            id: \"city\",\n            name: \"city\",\n            value: info.city,\n            onChange: e => getAreas(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 25\n            }, this), cities.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: city.city_id,\n              children: city.c_name\n            }, city.city_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 29\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"area\",\n            className: \"form-label\",\n            children: \"Select Area:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            id: \"area\",\n            name: \"area\",\n            value: info.area,\n            onChange: e => dispatch({\n              type: 'update',\n              fld: 'area',\n              val: e.target.value\n            }),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Area\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 25\n            }, this), areas.map(area => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: area.area_id,\n              children: area.area_name\n            }, area.area_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 29\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"address\",\n            className: \"form-label\",\n            children: \"Enter User Address :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"address\",\n            name: \"address\",\n            value: info.address,\n            onChange: e => dispatch({\n              type: 'update',\n              fld: 'address',\n              val: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-msg\",\n            style: {\n              color: 'red'\n            },\n            children: errorMsgs.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary mb-3\",\n          onClick: e => sendData(e),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"reset\",\n          className: \"btn btn-primary mb-3\",\n          onClick: () => dispatch({\n            type: 'reset'\n          }),\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this), showModal && /*#__PURE__*/_jsxDEV(Modal, {\n        message: \"Are you sure you want to submit the form?\",\n        onConfirm: handleConfirm,\n        onCancel: handleCancel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: JSON.stringify(info)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this);\n  };\n}\n_s(ConsumerReg, \"OdCkZl21IDLxH6IX50Wb3wTmKRs=\", false, function () {\n  return [useNavigate];\n});\n_c = ConsumerReg;\nvar _c;\n$RefreshReg$(_c, \"ConsumerReg\");","map":{"version":3,"names":["useReducer","useState","useEffect","useNavigate","Modal","jsxDEV","_jsxDEV","ConsumerReg","_s","init","username","password","first_name","last_name","email","phone_no","area","address","reducer","state","action","type","fld","val","info","dispatch","cities","setCities","areas","setAreas","msg","setMsg","errorMsgs","setErrorMsgs","navigate","showModal","setShowModal","confirmSubmit","fetch","then","resp","ok","json","Error","data","catch","error","console","log","toString","getAreas","id","obj","sendData","e","preventDefault","requiredFields","newErrorMsgs","field","handleConfirm","reqOptions","method","headers","body","JSON","stringify","area_id","status","alert","handleCancel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","name","value","onChange","target","required","pattern","title","style","color","city","map","city_id","c_name","area_name","onClick","message","onConfirm","onCancel","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/Git changes/E-Com-Electronics-Hub/Client Side/React_App/src/components/ConsumerReg.js"],"sourcesContent":["import { useReducer, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './LoginComp.css';\r\nimport Modal from './Modal';\r\nexport default function ConsumerReg() {\r\n    const init = {\r\n        username: \"\",\r\n        password: \"\",\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        email: \"\",\r\n        phone_no: \"\",\r\n        area: 0,\r\n        address: \"\"\r\n    }\r\n\r\n    const reducer = (state, action) => {\r\n        switch (action.type) {\r\n            case 'update':\r\n                return { ...state, [action.fld]: action.val }\r\n            case 'reset':\r\n                return init;\r\n            default:\r\n                return state;\r\n        }\r\n    }\r\n\r\n    const [info, dispatch] = useReducer(reducer, init);\r\n    const [cities, setCities] = useState([]); \r\n    const [areas, setAreas] = useState([]);\r\n    const [msg, setMsg] = useState(\"\");\r\n    const [errorMsgs, setErrorMsgs] = useState(init);\r\n    const navigate = useNavigate();\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    const confirmSubmit = () => {\r\n        setShowModal(true);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetch(\"http://localhost:8080/getCities\")\r\n            .then(resp => {\r\n                if(resp.ok) {\r\n                    return resp.json();\r\n                } else {\r\n                    throw new Error(\"server error\")\r\n                }\r\n            })\r\n            .then(data => setCities(data))\r\n            .catch(error => console.log(error.toString()));\r\n    }, []); \r\n\r\n    const getAreas = (id) => {\r\n        fetch(\"http://localhost:8080/getAreas?cid=\" + id)\r\n            .then(resp => {\r\n                if(resp.ok) {\r\n                    return resp.json();\r\n                } else {\r\n                    throw new Error(\"server error\")\r\n                }\r\n            })\r\n            .then(obj => setAreas(obj))\r\n            .catch(error => console.log(error.toString()));\r\n    }\r\n\r\n    const sendData = (e) => {\r\n        e.preventDefault();\r\n        const requiredFields = ['username', 'password', 'first_name', 'last_name', 'email', 'phone_no', 'area', 'address'];\r\n        const newErrorMsgs = { ...errorMsgs }; // Copy of current error messages\r\n\r\n       \r\n        for (const field of requiredFields) {\r\n            newErrorMsgs[field] = \"\";\r\n        }\r\n\r\n        \r\n        for (const field of requiredFields) {\r\n            if (!info[field]) {\r\n                newErrorMsgs[field] = \"This field is required\";\r\n            }\r\n        }\r\n\r\n        // Check if any error messages exist\r\n        for (const field of requiredFields) {\r\n            if (newErrorMsgs[field]) {\r\n                setErrorMsgs(newErrorMsgs);\r\n                return;\r\n            }\r\n        }\r\n        const handleConfirm = () => {\r\n            setShowModal(false);\r\n        const reqOptions = {\r\n            method: 'POST',\r\n            headers: { 'content-type': 'application/json' },\r\n            body: JSON.stringify({\r\n                username: info.username,\r\n                password: info.password,\r\n                first_name: info.first_name,\r\n                last_name: info.last_name,\r\n                email: info.email,\r\n                phone_no: info.phone_no,       \r\n                area_id: info.area,\r\n                address: info.address\r\n            })\r\n        }\r\n        fetch(\"http://localhost:8080/consumerreg\", reqOptions)\r\n            .then(resp => {\r\n                if (resp.ok) {\r\n                     console.log(resp.status)\r\n                    return resp.json();\r\n                } else {\r\n                    throw new Error(\"server error\");\r\n                }\r\n            })\r\n            .then(obj => {\r\n                alert(\"Registration successful, Try Login\");\r\n                navigate('/login')\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n            });\r\n    }\r\n    const handleCancel = () => {\r\n        setShowModal(false);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"container mt-5 login-form-container col-6\">\r\n            <h1> Consumer Registration </h1>\r\n            <form>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"username\" className=\"form-label\">Enter User Name :</label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"username\" name=\"username\" \r\n                        value={info.username}  \r\n                        onChange={(e) => dispatch({type: 'update', fld: 'username', val: e.target.value})}\r\n                        required\r\n                        pattern=\"[a-zA-Z0-9_-]{3,16}$\"\r\n                        title=\"Username allows alphanumeric characters (both lowercase and uppercase), underscores, and hyphens. Length must be between 3 and 16 characters.\"\r\n                    />\r\n                    <div className=\"error-msg\" style={{ color: 'red' }}>{errorMsgs.username}</div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\" className=\"form-label\">Enter Password :</label>\r\n                    <input type=\"password\" className=\"form-control\" id=\"password\" name=\"password\" \r\n                        value={info.password} \r\n                        onChange={(e) => dispatch({type: 'update', fld: 'password', val: e.target.value})}\r\n                        required\r\n                        pattern=\"^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=])(?=\\S+$).{8,}$\"\r\n                        title=\"Password should contain at least one digit, one lowercase letter, one uppercase letter, one special character, and be at least 8 characters long.\"\r\n                    />\r\n                    <div className=\"error-msg\" style={{ color: 'red' }}>{errorMsgs.password}</div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"first_name\" className=\"form-label\">Enter First Name :</label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"first_name\" name=\"first_name\" \r\n                        value={info.first_name} \r\n                        onChange={(e) => dispatch({type: 'update', fld: 'first_name', val: e.target.value})}\r\n                        required\r\n                    /><div className=\"error-msg\" style={{ color: 'red' }}>{errorMsgs.first_name}</div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"last_name\" className=\"form-label\">Enter Last Name :</label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"last_name\" name=\"last_name\" \r\n                        value={info.last_name} \r\n                        onChange={(e) => dispatch({type: 'update', fld: 'last_name', val: e.target.value})}\r\n                        required\r\n                    /><div className=\"error-msg\" style={{ color: 'red' }}>{errorMsgs.last_name}</div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"email\" className=\"form-label\">Enter User Email :</label>\r\n                    <input type=\"email\" className=\"form-control\" id=\"email\" name=\"email\" \r\n                        value={info.email}  \r\n                        onChange={(e) => dispatch({type: 'update', fld: 'email', val: e.target.value})}\r\n                        required\r\n                        pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\r\n                        title=\"Email should be in proper format\"\r\n                    /><div className=\"error-msg\" style={{ color: 'red' }}>{errorMsgs.email}</div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"phone_no\" className=\"form-label\">Enter User Phone Number :</label>\r\n                    <input type=\"tel\" className=\"form-control\" id=\"phone_no\" name=\"phone_no\" \r\n                        value={info.phone_no}  \r\n                        onChange={(e) => dispatch({type: 'update', fld: 'phone_no', val: e.target.value})}\r\n                        required\r\n                        pattern=\"[0-9]{10}\"\r\n                        title=\"Phone number should be 10 digits\"\r\n                    /><div className=\"error-msg\" style={{ color: 'red' }}>{errorMsgs.phone_no}</div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"city\" className=\"form-label\">Select City:</label>\r\n                    <select\r\n                        className=\"form-control\"\r\n                        id=\"city\"\r\n                        name=\"city\"\r\n                        value={info.city}\r\n                        onChange={(e) => getAreas(e.target.value)}\r\n                        required\r\n                    >\r\n                        <option value=\"\">Select City</option>\r\n                        {cities.map(city => (\r\n                            <option key={city.city_id} value={city.city_id}>{city.c_name}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>       \r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"area\" className=\"form-label\">Select Area:</label>\r\n                    <select\r\n                        className=\"form-control\"\r\n                        id=\"area\"\r\n                        name=\"area\"\r\n                        value={info.area}\r\n                        onChange={(e) => dispatch({ type: 'update', fld: 'area', val: e.target.value })}\r\n                        required\r\n                    >\r\n                        <option value=\"\">Select Area</option>\r\n                        {areas.map((area) => (\r\n                            <option key={area.area_id} value={area.area_id}>\r\n                                {area.area_name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>  \r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"address\" className=\"form-label\">Enter User Address :</label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"address\" name=\"address\" \r\n                        value={info.address}  \r\n                        onChange={(e) => dispatch({type: 'update', fld: 'address', val: e.target.value})}\r\n                        required\r\n                    /><div className=\"error-msg\" style={{ color: 'red' }}>{errorMsgs.address}</div>\r\n                </div>  \r\n                \r\n                <button type=\"submit\" className=\"btn btn-primary mb-3\" onClick={(e) => sendData(e)}>Submit</button>\r\n                <button type=\"reset\" className=\"btn btn-primary mb-3\" onClick={() => dispatch({type: 'reset'})}>Clear</button>\r\n            </form>\r\n            {showModal && (\r\n                <Modal\r\n                    message=\"Are you sure you want to submit the form?\"\r\n                    onConfirm={handleConfirm}\r\n                    onCancel={handleCancel}\r\n                />\r\n            )}\r\n            <p>{JSON.stringify(info)}</p>\r\n            <p>{msg}</p> \r\n        </div>\r\n    )\r\n}\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}